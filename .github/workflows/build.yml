name: CI
on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        poetry-version: [1.4.2]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry run make install

      - name: Run linters
        run: poetry run make lint

      - name: Run tests
        run: poetry run make test

      - name: Store test result artifacts
        uses: actions/upload-artifact@v3
        with:
          path: coverage.xml

      - name: Codecov
        uses: codecov/codecov-action@v2
